user isucon;
worker_processes auto;
pid /usr/local/openresty/nginx/logs/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 16384;
    multi_accept on;
    use epoll;
    # https://qiita.com/cubicdaiya/items/235777dc401ec419b14e#accept_mutex_delay
    accept_mutex_delay 100ms;
}

http {

	##
	# Basic Settings
	##

    # 	sendfile on;
    # 	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;


    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 120;
    client_max_body_size 10m;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


	include mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

    # TLS configuration
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';



	##
	# Logging Settings
	##

    log_format json escape=json '{"time":"$time_local",'
                                '"host":"$remote_addr",'
                                '"forwardedfor":"$http_x_forwarded_for",'
                                '"req":"$request",'
                                '"status":"$status",'
                                '"method":"$request_method",'
                                '"uri":"$request_uri",'
                                '"body_bytes":$body_bytes_sent,'
                                '"referer":"$http_referer",'
                                '"ua":"$http_user_agent",'
                                '"request_time":$request_time,'
                                '"cache":"$upstream_http_x_cache",'
                                '"runtime":"$upstream_http_x_runtime",'
                                '"response_time":"$upstream_response_time",'
                                '"vhost":"$host",'
                                '"request_id":"$request_id",'
                                '"trace_id":"$trace_id",'
                                '"cache_status":"$upstream_cache_status"}';

    access_log  /home/isucon/log/nginx/access.log json;
    error_log  /home/isucon/log/nginx/error.log;

    proxy_set_header X-Request-ID $request_id;
    proxy_set_header X-Trace-ID $trace_id;

	##
	# Gzip Settings
	##

    # 	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    gzip  on;
    gzip_types text/css text/javascript application/javascript application/x-javascript application/json;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_static on;
    gzip_vary on;

	##
	# Virtual Host Configs
	##

    # ================================ trace_id ================================
    # https://github.com/thibaultcha/lua-resty-jit-uuid
    init_worker_by_lua_block {
        require "resty.core"
        local uuid = require 'resty.jit-uuid'
        uuid.seed()
    }
    lua_package_path "/path/to/lua-resty-cookie/lib/?.lua;;";





    server {
        # ===================================== trace_id =====================================
        set $trace_id '';
        access_by_lua_block {
            local cookie = require "resty.cookie"
            local uuid = require "resty.jit-uuid"

            local ck = cookie:new()
            local trace_id, err = ck:get("trace_id")

            if not (trace_id) or (trace_id == "") then
                trace_id = uuid.generate_v4()
                local ok, err = ck:set({
                    key = "trace_id",
                    value = trace_id,
                    path = "/",
                    httponly = true,
                    secure = false, -- set to true if you want to enforce HTTPS
                    max_age = 3600 -- cookie expiration in seconds, adjust as you see fit
                })

                if not ok then
                    ngx.log(ngx.ERR, err)
                    return
                end
            end

            ngx.var.trace_id = trace_id
        }
        # ===================================== trace_id =====================================


      listen 80;
      server_name *.t.isucon.dev;

      root /home/isucon/torb/webapp/static/;

      ssl_certificate     /etc/nginx/tls/fullchain.pem;
      ssl_certificate_key /etc/nginx/tls/key.pem;
      ssl_dhparam         /etc/nginx/tls/dhparam.pem;
      ssl_protocols       TLSv1.2 TLSv1.3;
      ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

      location ~* ^/(favicon|css|img|js) {
          expires 1d;
          add_header Cache-Control "public";
          add_header ETag "";
      }

      location / {
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header Host $host;
        proxy_set_header X-Request-Id $request_id;

        proxy_pass http://127.0.0.1:8080;
      }
    }
}

